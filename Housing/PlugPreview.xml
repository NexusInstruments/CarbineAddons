<Forms>
    <Form Class="Window" LAnchorPoint="0" LAnchorOffset="139" TAnchorPoint=".5" TAnchorOffset="-383" RAnchorPoint="0" RAnchorOffset="574" BAnchorPoint=".5" BAnchorOffset="-38" RelativeToClient="1" Font="Default" Text="" Template="Default" Name="PlugPreviewWindow" Border="0" Picture="0" SwallowMouseClicks="1" Moveable="1" Escapable="1" Overlapped="1" BGColor="ffffffff" TextColor="ffffffff" TextId="" Visible="0" TooltipColor="" Tooltip="" Sizable="1">
        <Control Class="Window" LAnchorPoint="0" LAnchorOffset="0" TAnchorPoint="0" TAnchorOffset="0" RAnchorPoint="1" RAnchorOffset="0" BAnchorPoint="1" BAnchorOffset="0" RelativeToClient="1" Font="Default" Text="" Template="Default" Name="BGArt" BGColor="ffffffff" TextColor="ffffffff" TextId="" TooltipColor="">
            <Control Class="Window" LAnchorPoint="0" LAnchorOffset="14" TAnchorPoint="0" TAnchorOffset="9" RAnchorPoint="1" RAnchorOffset="-13" BAnchorPoint="1" BAnchorOffset="-60" RelativeToClient="1" Font="Default" Text="" Template="CRB_NormalFramedThick" Name="BG_BodyFrame" BGColor="ffffffff" TextColor="ffffffff" Border="0" UseTemplateBG="0" IgnoreMouse="1" Picture="1" Sprite="CRB_Basekit:kitBase_HoloHexes_Small" TooltipColor="" />
            <Control Class="Window" LAnchorPoint="0" LAnchorOffset="18" TAnchorPoint="1" TAnchorOffset="-65" RAnchorPoint="1" RAnchorOffset="-17" BAnchorPoint="1" BAnchorOffset="-9" RelativeToClient="1" Font="Default" Text="" Template="Default" Name="BG_Footer" BGColor="ffffffff" TextColor="ffffffff" Picture="1" Sprite="CRB_Basekit:kitFooter_MetalGrey_Square" TooltipColor="" />
            <Event Name="MouseButtonDown" Function="OnClick" />
            <Event Name="MouseButtonUp" Function="OnClick" />
            <Control Class="Window" LAnchorPoint="0" LAnchorOffset="0" TAnchorPoint="0" TAnchorOffset="-1" RAnchorPoint="1" RAnchorOffset="0" BAnchorPoint="1" BAnchorOffset="-1" RelativeToClient="1" Font="Default" Text="" Template="Default" Name="BG_ArtFrame" BGColor="ffffffff" TextColor="ffffffff" Picture="1" IgnoreMouse="1" Sprite="CRB_Basekit:kitInnerFrame_MetalGrey_Medium" TooltipColor="" />
        </Control>
        <Control Class="Button" Base="CRB_Basekit:kitBtn_Close" Font="Thick" ButtonType="PushButton" RadioGroup="" LAnchorPoint="1" LAnchorOffset="-31" TAnchorPoint="0" TAnchorOffset="4" RAnchorPoint="1" RAnchorOffset="-4" BAnchorPoint="0" BAnchorOffset="33" DT_VCENTER="1" DT_CENTER="1" Name="CloseBtn" BGColor="ffffffff" TextColor="ffffffff" NewControlDepth="2" WindowSoundTemplate="CloseWindowPhys" Text="" TextId="" NormalTextColor="ffffffff" PressedTextColor="ffffffff" FlybyTextColor="ffffffff" PressedFlybyTextColor="ffffffff" DisabledTextColor="ffffffff" TooltipColor="" Tooltip="">
            <Event Name="ButtonSignal" Function="OnClosePlugPreviewWindow" />
        </Control>
        <Event Name="WindowClosed" Function="OnWindowClosed" />
        <Control Class="Button" Base="CRB_UIKitSprites:btn_arrowforward" Font="Thick" ButtonType="PushButton" RadioGroup="" LAnchorPoint="1" LAnchorOffset="-48" TAnchorPoint="0.5" TAnchorOffset="-39" RAnchorPoint="1" RAnchorOffset="-19" BAnchorPoint="0.5" BAnchorOffset="-12" DT_VCENTER="1" DT_CENTER="1" TooltipType="OnCursor" Name="NextButton" BGColor="ffffffff" TextColor="ffffffff" TooltipColor="" NormalTextColor="ffffffff" PressedTextColor="ffffffff" FlybyTextColor="ffffffff" PressedFlybyTextColor="ffffffff" DisabledTextColor="ffffffff" Text="">
            <Event Name="ButtonSignal" Function="OnNextButton" />
        </Control>
        <Control Class="Button" Base="CRB_UIKitSprites:btn_arrowback" Font="Thick" ButtonType="PushButton" RadioGroup="" LAnchorPoint="0" LAnchorOffset="24" TAnchorPoint="0.5" TAnchorOffset="-38" RAnchorPoint="0" RAnchorOffset="56" BAnchorPoint="0.5" BAnchorOffset="-10" DT_VCENTER="1" DT_CENTER="1" TooltipType="OnCursor" Name="PreviousButton" BGColor="ffffffff" TextColor="ffffffff" TooltipColor="" NormalTextColor="ffffffff" PressedTextColor="ffffffff" FlybyTextColor="ffffffff" PressedFlybyTextColor="ffffffff" DisabledTextColor="ffffffff">
            <Event Name="ButtonSignal" Function="OnPreviousButton" />
        </Control>
        <Control Class="Window" LAnchorPoint="0" LAnchorOffset="20" TAnchorPoint="0" TAnchorOffset="15" RAnchorPoint="1" RAnchorOffset="-21" BAnchorPoint="1" BAnchorOffset="-67" RelativeToClient="1" Font="Default" Text="" Template="Default" TooltipType="OnCursor" Name="Screenshot01" BGColor="ffffffff" TextColor="ffffffff" TooltipColor="" Sprite="CRB_DEMO_WrapperSprites:sprDemo_CharCEsper" Picture="1" IgnoreMouse="1" Tooltip="" />
    </Form>
</Forms>
Screen:SetSprite("ClientSprites:"..sprite)
    else
        self.winScreen:SetSprite("")
    end
end

---------------------------------------------------------------------------------------------------
function PlugPreview:GetItem(id, itemlist)
  local ix, item
  for ix = 1, #itemlist do
    item = itemlist[ix]
    if item["id"] == id then
      return item
    end
  end
  return nil
end

-----------------------------------------------------------------------------------------------
-- PlugPreview Instance
-----------------------------------------------------------------------------------------------
local PlugPreviewInst = PlugPreview:new()
PlugPreviewInst:Init()
ndHazardList:ArrangeChildrenHorz(Window.CodeEnumArrangeOrigin.LeftOrTop)
		local nLeft, nTop, nRight, nBottom = self.tWndRefs.wndMain:GetAnchorOffsets()
		self.tWndRefs.wndMain:SetAnchorOffsets(nRight - nWidth, nTop, nRight, nBottom)
	end
end

function Hazards:OnHazardUpdate(idHazard, eHazardType, fMeterValue, fMaxValue, strTooltip)
	if self.tHazardWnds[idHazard] then
		-- find the progress bar and update the limits
		local wndProgressBar = self.tHazardWnds[idHazard].wndHazardProgress
		wndProgressBar:SetMax(fMaxValue)

		if fMaxValue == fMeterValue then
			wndProgressBar:SetProgress(fMaxValue - .001, fMaxValue)
		else
			wndProgressBar:SetProgress(fMeterValue, fMaxValue)
		end

		--Cut down to integers only; we assume this is out of 100

		if eHazardType ~= HazardsLib.HazardType_Timer then -- standard percent
			local strPercent = (fMeterValue / fMaxValue) * 100
			self.tHazardWnds[idHazard].wndNumberText:SetText(string.format("%.0f", strPercent))
		else
			local strTime = string.format("%d:%02d", math.floor(fMeterValue / 60), math.floor(fMeterValue % 60))
			self.tHazardWnds[idHazard].wndNumberText:SetText(strTime)
		end

		if strTooltip ~= nil then
			wndProgressBar:SetTooltip(strTooltip)
		end
	end
end

function Hazards:OnBreathChanged(nBreath)
	local idHazard = knBreathFakeId
	local eHazardType = HazardsLib.HazardType_Breath
	local nBreathMax = 100
	
	if nBreath == nBreathMax then
		self:OnHazardRemove(idHazard)
		return
	end
	
	if self.tHazardWnds[idHazard] == nil then
		self:BuildHazardWindow(idHazard, eHazardType)
	
		local tSprites = karBarSprites[eHazardType] or karBarSprites["default"]
	
		self.tHazardWnds[idHazard].wndIcon:SetSprite(tSprites.strIcon)
		self.tHazardWnds[idHazard].wndHazardProgress:SetFillSprite(tSprites.strFillColor)
		self.tHazardWnds[idHazard].wndHazardProgress:SetGlowSprite(tSprites.strEdgeColor)
		self.tHazardWnds[idHazard].wndIcon:SetTooltip(Apollo.GetString("CRB_Breath_"))
		
		local nWidth = self.tWndRefs.wndHazardList:ArrangeChildrenHorz(Window.CodeEnumArrangeOrigin.LeftOrTop)
		local nLeft, nTop, nRight, nBottom = self.tWndRefs.wndMain:GetAnchorOffsets()
		self.tWndRefs.wndMain:SetAnchorOffsets(nRight - nWidth, nTop, nRight, nBottom)
	end
	
	self:OnHazardUpdate(idHazard, eHazardType, nBreath, nBreathMax, nil)
end

function Hazards:OnBreath_FlashEvent()
	if self.tHazardWnds[knBreathFakeId] ~= nil then
		self.tHazardWnds[knBreathFakeId].wndHazardsProgressFlash:SetSprite("SprintMeter:sprHazards_Flash")
	end
end


local HazardInst = Hazards:new()
HazardInst:Init()lertPopout"):Show(bToggle, not bToggle)
		self.wndMain:FindChild("AlertItemKeybind"):SetSprite(bToggle and "sprAlert_Square_Blue" or "sprAlert_Square_Black")
	end
end

local HUDInteractInst = HUDInteract:new()
HUDInteractInst:Init()
ö”