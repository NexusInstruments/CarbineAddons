<Forms>
    <Form Class="Window" LAnchorPoint="0" LAnchorOffset="161" TAnchorPoint=".5" TAnchorOffset="-362" RAnchorPoint="0" RAnchorOffset="475" BAnchorPoint=".5" BAnchorOffset="1" RelativeToClient="1" Font="Default" Text="" Template="Default" Name="DecorPreviewWindow" Border="0" Picture="0" SwallowMouseClicks="1" Moveable="1" Escapable="1" Overlapped="1" BGColor="ffffffff" TextColor="ffffffff" TextId="" Visible="0" TooltipColor="" Tooltip="" Sizable="1">
        <Control Class="Window" LAnchorPoint="0" LAnchorOffset="0" TAnchorPoint="0" TAnchorOffset="0" RAnchorPoint="1" RAnchorOffset="0" BAnchorPoint="1" BAnchorOffset="0" RelativeToClient="1" Font="Default" Text="" Template="Default" TooltipType="OnCursor" Name="BGArt" BGColor="white" TextColor="white" TooltipColor="" Picture="0" IgnoreMouse="1" Sprite="">
            <Control Class="Window" LAnchorPoint="0" LAnchorOffset="-20" TAnchorPoint="0" TAnchorOffset="-20" RAnchorPoint="1" RAnchorOffset="20" BAnchorPoint="1" BAnchorOffset="35" RelativeToClient="1" Font="Default" Text="" Template="Holo_Large" TooltipType="OnCursor" Name="BGArt_HoloBase" BGColor="white" TextColor="white" TooltipColor="" Picture="0" IgnoreMouse="1" Sprite="" Border="1" UseTemplateBG="1" NoClip="1"/>
            <Control Class="Window" LAnchorPoint="0" LAnchorOffset="15" TAnchorPoint="1" TAnchorOffset="-58" RAnchorPoint="1" RAnchorOffset="-17" BAnchorPoint="1" BAnchorOffset="0" RelativeToClient="1" Font="Default" Text="" Template="Holo_Inset_Callout" TooltipType="OnCursor" Name="BGArt_Footer" BGColor="white" TextColor="white" TooltipColor="" Picture="0" IgnoreMouse="1" Sprite="" NewControlDepth="1" Border="1" UseTemplateBG="1"/>
        </Control>
        <Control Class="ModelWindow" LAnchorPoint="0" LAnchorOffset="11" TAnchorPoint="0" TAnchorOffset="13" RAnchorPoint="1" RAnchorOffset="-12" BAnchorPoint="1" BAnchorOffset="-59" RelativeToClient="1" Font="Default" Text="" Template="Default" Name="ModelWindow" BGColor="ffffffff" TextColor="ffffffff" Camera="Target" Animated="1" TooltipType="OnCursor" TooltipColor="" NewControlDepth="5"/>
        <Control Class="Button" Base="BK3:btnHolo_Close" Font="Thick" ButtonType="PushButton" RadioGroup="" LAnchorPoint="1" LAnchorOffset="-47" TAnchorPoint="0" TAnchorOffset="6" RAnchorPoint="1" RAnchorOffset="-4" BAnchorPoint="0" BAnchorOffset="50" DT_VCENTER="1" DT_CENTER="1" Name="CloseBtn" BGColor="ffffffff" TextColor="ffffffff" NewControlDepth="2" WindowSoundTemplate="CloseWindowPhys" Text="" TextId="" NormalTextColor="ffffffff" PressedTextColor="ffffffff" FlybyTextColor="ffffffff" PressedFlybyTextColor="ffffffff" DisabledTextColor="ffffffff" TooltipColor="" Tooltip="" NewWindowDepth="1">
            <Event Name="ButtonSignal" Function="OnCloseDecorPreviewWindow"/>
        </Control>
        <Event Name="WindowClosed" Function="OnWindowClosed"/>
        <Control Class="Button" Base="BK3:btnHolo_Blue_Small" Font="CRB_Button" ButtonType="PushButton" RadioGroup="" LAnchorPoint=".5" LAnchorOffset="-63" TAnchorPoint="1" TAnchorOffset="-54" RAnchorPoint=".5" RAnchorOffset="62" BAnchorPoint="1" BAnchorOffset="-1" DT_VCENTER="1" DT_CENTER="1" Name="ResetBtn" BGColor="ffffffff" TextColor="ffffffff" NewControlDepth="2" WindowSoundTemplate="TogglePhys02" TextId="DecorPreview_Reset" Text="" NormalTextColor="ff00ffff" PressedTextColor="ffffffff" FlybyTextColor="ff80ffff" PressedFlybyTextColor="ffffffff" DisabledTextColor="ff4f4235" HideInEditor="0" Visible="1" TooltipColor="" Tooltip="">
            <Event Name="ButtonSignal" Function="OnResetViewBtn"/>
        </Control>
        <Control Class="Button" Base="CharacterWindowSprites:btn_ArrowTurnRight" Font="Thick" ButtonType="PushButton" RadioGroup="" LAnchorPoint=".5" LAnchorOffset="65" TAnchorPoint="1" TAnchorOffset="-42" RAnchorPoint=".5" RAnchorOffset="114" BAnchorPoint="1" BAnchorOffset="-13" DT_VCENTER="1" DT_CENTER="1" TooltipType="OnCursor" Name="RotateRightButton" BGColor="ffffffff" TextColor="ffffffff" TooltipColor="" NormalTextColor="ffffffff" PressedTextColor="ffffffff" FlybyTextColor="ffffffff" PressedFlybyTextColor="ffffffff" DisabledTextColor="ffffffff">
            <Event Name="ButtonUp" Function="OnRotateRightEnd"/>
            <Event Name="ButtonDown" Function="OnRotateRightBegin"/>
            <Event Name="ButtonSignal" Function="OnRotateRightEnd"/>
        </Control>
        <Control Class="Button" Base="CharacterWindowSprites:btn_ArrowTurnLeft" Font="Thick" ButtonType="PushButton" RadioGroup="" LAnchorPoint=".5" LAnchorOffset="-116" TAnchorPoint="1" TAnchorOffset="-40" RAnchorPoint=".5" RAnchorOffset="-65" BAnchorPoint="1" BAnchorOffset="-13" DT_VCENTER="1" DT_CENTER="1" TooltipType="OnCursor" Name="RotateLeftButton" BGColor="ffffffff" TextColor="ffffffff" TooltipColor="" NormalTextColor="ffffffff" PressedTextColor="ffffffff" FlybyTextColor="ffffffff" PressedFlybyTextColor="ffffffff" DisabledTextColor="ffffffff">
            <Event Name="ButtonUp" Function="OnRotateLeftEnd"/>
            <Event Name="ButtonDown" Function="OnRotateLeftBegin"/>
        </Control>
    </Form>
</Forms>
rdUpdate(tData.nId, tData.eHazardType, tData.fMeterValue, tData.fMaxValue, tData.strTooltip)
	end

	if bNew and self.tWndRefs.wndMain ~= nil and self.tWndRefs.wndMain:IsValid() then
		local nWidth = self.tWndRefs.wndHazardList:ArrangeChildrenHorz(Window.CodeEnumArrangeOrigin.LeftOrTop)
		local nLeft, nTop, nRight, nBottom = self.tWndRefs.wndMain:GetAnchorOffsets()
		self.tWndRefs.wndMain:SetAnchorOffsets(nRight - nWidth, nTop, nRight, nBottom)
	end
end

function Hazards:OnHazardUpdate(idHazard, eHazardType, fMeterValue, fMaxValue, strTooltip)
	if self.tHazardWnds[idHazard] then
		-- find the progress bar and update the limits
		local wndProgressBar = self.tHazardWnds[idHazard].wndHazardProgress
		wndProgressBar:SetMax(fMaxValue)

		if fMaxValue == fMeterValue then
			wndProgressBar:SetProgress(fMaxValue - .001, fMaxValue)
		else
			wndProgressBar:SetProgress(fMeterValue, fMaxValue)
		end

		--Cut down to integers only; we assume this is out of 100

		if eHazardType ~= HazardsLib.HazardType_Timer then -- standard percent
			local strPercent = (fMeterValue / fMaxValue) * 100
			self.tHazardWnds[idHazard].wndNumberText:SetText(string.format("%.0f", strPercent))
		else
			local strTime = string.format("%d:%02d", math.floor(fMeterValue / 60), math.floor(fMeterValue % 60))
			self.tHazardWnds[idHazard].wndNumberText:SetText(strTime)
		end

		if strTooltip ~= nil then
			wndProgressBar:SetTooltip(strTooltip)
		end
	end
end

function Hazards:OnBreathChanged(nBreath)
	local idHazard = knBreathFakeId
	local eHazardType = HazardsLib.HazardType_Breath
	local nBreathMax = 100
	
	if nBreath == nBreathMax then
		self:OnHazardRemove(idHazard)
		return
	end
	
	if self.tHazardWnds[idHazard] == nil then
		self:BuildHazardWindow(idHazard, eHazardType)
	
		local tSprites = karBarSprites[eHazardType] or karBarSprites["default"]
	
		self.tHazardWnds[idHazard].wndIcon:SetSprite(tSprites.strIcon)
		self.tHazardWnds[idHazard].wndHazardProgress:SetFillSprite(tSprites.strFillColor)
		self.tHazardWnds[idHazard].wndHazardProgress:SetGlowSprite(tSprites.strEdgeColor)
		self.tHazardWnds[idHazard].wndIcon:SetTooltip(Apollo.GetString("CRB_Breath_"))
		
		local nWidth = self.tWndRefs.wndHazardList:ArrangeChildrenHorz(Window.CodeEnumArrangeOrigin.LeftOrTop)
		local nLeft, nTop, nRight, nBottom = self.tWndRefs.wndMain:GetAnchorOffsets()
		self.tWndRefs.wndMain:SetAnchorOffsets(nRight - nWidth, nTop, nRight, nBottom)
	end
	
	self:OnHazardUpdate(idHazard, eHazardType, nBreath, nBreathMax, nil)
end

function Hazards:OnBreath_FlashEvent()
	if self.tHazardWnds[knBreathFakeId] ~= nil then
		self.tHazardWnds[knBreathFakeId].wndHazardsProgressFlash:SetSprite("SprintMeter:sprHazards_Flash")
	end
end


local HazardInst = Hazards:new()
HazardInst:Init()lertPopout"):Show(bToggle, not bToggle)
		self.wndMain:FindChild("AlertItemKeybind"):SetSprite(bToggle and "sprAlert_Square_Blue" or "sprAlert_Square_Black")
	end
end

local HUDInteractInst = HUDInteract:new()
HUDInteractInst:Init()
ö”