-----------------------------------------------------------------------------------------------
-- Client Lua Script for TradeskillContainer
-- Copyright (c) NCsoft. All rights reserved
-----------------------------------------------------------------------------------------------

require "Window"

local TradeskillContainer = {}

local knSaveVersion = 2

function TradeskillContainer:new(o)
    o = o or {}
    setmetatable(o, self)
    self.__index = self
    return o
end

function TradeskillContainer:Init()
    Apollo.RegisterAddon(self)
end

function TradeskillContainer:OnLoad()
	self.xmlDoc = XmlDoc.CreateFromFile("TradeskillContainer.xml")
	self.xmlDoc:RegisterCallback("OnDocumentReady", self)
end

function TradeskillContainer:OnDocumentReady()
	if self.xmlDoc == nil then
		return
	end

	Apollo.RegisterEventHandler("InterfaceMenuListHasLoaded", 	"OnInterfaceMenuListHasLoaded", self)
	Apollo.RegisterEventHandler("WindowManagementReady", 		"OnWindowManagementReady", self)

	Apollo.RegisterEventHandler("GenericEvent_OpenToSpecificSchematic", "OnOpenToSpecificSchematic", self) -- Not Used Yet
	Apollo.RegisterEventHandler("GenericEvent_OpenToSpecificTechTree", 	"OnOpenToSpecificTechTree", self)
	Apollo.RegisterEventHandler("GenericEvent_OpenToSearchSchematic", 	"OnOpenToSearchSchematic", self)

	Apollo.RegisterEventHandler("TradeskillLearnedFromTHOR", 			"OnAlwaysShowTradeskills", self)
	Apollo.RegisterEventHandler("TradeSkills_Learned", 					"OnAlwaysShowTradeskills", self)
	Apollo.RegisterEventHandler("AlwaysShowTradeskills",				"OnAlwaysShowTradeskills", self)
	Apollo.RegisterEventHandler("AlwaysHideTradeskills",				"OnAlwaysHideTradeskills", self)
	Apollo.RegisterEventHandler("ToggleTradeskills", 					"OnToggleTradeskills", self)
	Apollo.RegisterEventHandler("WorkOrderLocate", 						"OnLocateAchievement", self) -- Clicking a work order quest
	Apollo.RegisterEventHandler("FloatTextPanel_ToggleTechTreeWindow", 	"OnLocateAchievement", self) -- Clicking view btn on achievement notification

	self.wndMain = Apollo.LoadForm(self.xmlDoc, "TradeskillContainerForm", nil, self)

	if self.wndMain == nil then
		return Apollo.AddonLoadStatus.LoadingError
	end

	self.wndMain:FindChild("ToggleSchematicsBtn"):AttachWindow(self.wndMain:FindChild("SchematicsMainForm"))
	self.wndMain:FindChild("ToggleAchievementBtn"):AttachWindow(self.wndMain:FindChild("AchievementsMainForm"))
	self.wndMain:FindChild("ToggleTalentsBtn"):AttachWindow(self.wndMain:FindChild("TalentsMainForm"))
	self.wndMain:FindChild("ToggleSchematicsBtn"):SetCheck(true)
	self.wndMain:Show(false, true)

	if self.locSavedWindowLoc then
		self.wndMain:MoveToLocation(self.locSavedWindowLoc)
	end
end

function TradeskillContainer:OnInterfaceMenuListHasLoaded()
	Event_FireGenericEvent("InterfaceMenuList_NewAddOn", Apollo.GetString("InterfaceMenu_Tradeskills"), {"ToggleTradeskills", "Tradeskills", "Icon_Windows32_UI_CRB_InterfaceMenu_Tradeskills"})
end

function TradeskillContainer:OnWindowManagementReady()
	Event_FireGenericEvent("WindowManagementAdd", {wnd = self.wndMain, strName = Apollo.GetString("CRB_Tradeskills")})
end

function TradeskillContainer:OnClose(wndHandler, wndControl)
	if wndHandler == wndControl then
		self.wndMain:Show(false)
	end
end

function TradeskillContainer:OnAlwaysShowTradeskills()
	if GameLib.GetPlayerUnit():IsCasting() then
		return
	end

	self.wndMain:ToFront()
	self.wndMain:Show(true)
	self:RedrawAll()
end

function TradeskillContainer:OnAlwaysHideTradeskills()
	self.wndMain:Show(false)
end

function TradeskillContainer:OnToggleTradeskills()
	if GameLib.GetPlayerUnit():IsCasting() then
		return
	end

	if self.wndMain:IsVisible() then
		self.wndMain:Close()
	else
		self.wndMain:Invoke()
		self:RedrawAll()
	end
end

function TradeskillContainer:OnLocateAchievement(idSchematic, achData)
	if GameLib.GetPlayerUnit():IsCasting() then
		return
	end

	local tSchematicInfo = nil
	if idSchematic then
		tSchematicInfo = CraftingLib.GetSchematicInfo(idSchematic)
	end

	if tSchematicInfo and tSchematicInfo.nParentSchematicId then -- Replace sub variants with their parent, we will open to their parent's page
		idSchematic = tSchematicInfo.nParentSchematicId
	end

	if tSchematicInfo and tSchematicInfo.bIsKnown then
		--send to schematics
		self.wndMain:FindChild("SchematicsMainForm"):Show(true)
		self.wndMain:FindChild("AchievementsMainForm"):Show(false)
		self.wndMain:FindChild("TalentsMainForm"):Show(false)
		self.wndMain:FindChild("ToggleSchematicsBtn"):SetCheck(true)
		self.wndMain:FindChild("ToggleAchievementBtn"):SetCheck(false)
		self.wndMain:FindChild("ToggleTalentsBtn"):SetCheck(false)
		Event_FireGenericEvent("GenericEvent_InitializeSchematicsTree", self.wndMain:FindChild("SchematicsMainForm"), idSchematic, nil)
	elseif not tSchematicInfo or (tSchematicInfo and tSchematicInfo.achSource ) or achData then
		--send to techtree
		self.wndMain:FindChild("SchematicsMainForm"):Show(false)
		self.wndMain:FindChild("AchievementsMainForm"):Show(true)
		self.wndMain:FindChild("TalentsMainForm"):Show(false)
		self.wndMain:FindChild("ToggleSchematicsBtn"):SetCheck(false)
		self.wndMain:FindChild("ToggleAchievementBtn"):SetCheck(true)
		self.wndMain:FindChild("ToggleTalentsBtn"):SetCheck(false)
		Event_FireGenericEvent("GenericEvent_InitializeAchievementTree", self.wndMain:FindChild("AchievementsMainForm"), (tSchematicInfo and tSchematicInfo.achSource or achData))
	end
	self.wndMain:Invoke()
end

function TradeskillContainer:OnOpenToSpecificTechTree(achievementData)
	if GameLib.GetPlayerUnit():IsCasting() then
		return
	end

	self.wndMain:ToFront()
	self.wndMain:Show(true)
	self.wndMain:FindChild("SchematicsMainForm"):Show(false)
	self.wndMain:FindChild("AchievementsMainForm"):Show(true)
	self.wndMain:FindChild("TalentsMainForm"):Show(false)
	self.wndMain:FindChild("ToggleSchematicsBtn"):SetCheck(false)
	self.wndMain:FindChild("ToggleAchievementBtn"):SetCheck(true)
	self.wndMain:FindChild("ToggleTalentsBtn"):SetCheck(false)
	Event_FireGenericEvent("GenericEvent_InitializeAchievementTree", self.wndMain:FindChild("AchievementsMainForm"), achievementData)
	--self:RedrawAll()
end

function TradeskillContainer:OnOpenToSpecificSchematic(nSchematicId)
	if GameLib.GetPlayerUnit():IsCasting() then
		return
	end

	self.wndMain:ToFront()
	self.wndMain:Show(true)
	self.wndMain:FindChild("SchematicsMainForm"):Show(true)
	self.wndMain:FindChild("AchievementsMainForm"):Show(false)
	self.wndMain:FindChild("TalentsMainForm"):Show(false)
	self.wndMain:FindChild("ToggleSchematicsBtn"):SetCheck(true)
	self.wndMain:FindChild("ToggleAchievementBtn"):SetCheck(false)
	self.wndMain:FindChild("ToggleTalentsBtn"):SetCheck(false)
	Event_FireGenericEvent("GenericEvent_InitializeSchematicsTree", self.wndMain:FindChild("SchematicsMainForm"), nSchematicId, nil)
	--self:RedrawAll()
end

function TradeskillContainer:OnOpenToSearchSchematic(strQuery)
	if GameLib.GetPlayerUnit():IsCasting() then
		return
	end

	self.wndMain:ToFront()
	self.wndMain:Show(true)
	self.wndMain:FindChild("SchematicsMainForm"):Show(true)
	self.wndMain:FindChild("AchievementsMainForm"):Show(false)
	self.wndMain:FindChild("TalentsMainForm"):Show(false)
	self.wndMain:FindChild("ToggleSchematicsBtn"):SetCheck(true)
	self.wndMain:FindChild("ToggleAchievementBtn"):SetCheck(false)
	self.wndMain:FindChild("ToggleTalentsBtn"):SetCheck(false)
	Event_FireGenericEvent("GenericEvent_InitializeSchematicsTree", self.wndMain:FindChild("SchematicsMainForm"), nil, strQuery)
	--self:RedrawAll()
end

function TradeskillContainer:OnTopTabBtn(wndHandler, wndControl)
	self:RedrawAll()
end

function TradeskillContainer:RedrawAll()
	-- TODO: We can destroy AchievementsMainForm and SchematicsMainForm's children to save memory when it's closed (after X time)
	if self.wndMain:FindChild("ToggleSchematicsBtn"):IsChecked() then
		Event_FireGenericEvent("GenericEvent_InitializeSchematicsTree", self.wndMain:FindChild("SchematicsMainForm"))
	elseif self.wndMain:FindChild("ToggleAchievementBtn"):IsChecked() then
		Event_FireGenericEvent("GenericEvent_InitializeAchievementTree", self.wndMain:FindChild("AchievementsMainForm"))
	elseif self.wndMain:FindChild("ToggleTalentsBtn"):IsChecked() then
		Event_FireGenericEvent("GenericEvent_InitializeTradeskillTalents", self.wndMain:FindChild("TalentsMainForm"))
	end
end

local TradeskillContainerInst = TradeskillContainer:new()
TradeskillContainerInst:Init()
.wndMain:FindChild("HobbyMessage"):Show(true)
end

function TradeskillTrainer:OnLearnTradeskillBtn(wndHandler, wndControl)
	if not wndHandler or not wndHandler:GetData() then
		return
	end

	local nCurrentTradeskill = self.wndMain:FindChild("LearnTradeskillBtn"):GetData()
	local tCurrTradeskillInfo = CraftingLib.GetTradeskillInfo(nCurrentTradeskill)
		if not tCurrTradeskillInfo.bIsHarvesting then
			Event_FireGenericEvent("TradeskillLearnedFromTHOR")
		else
	end
	CraftingLib.LearnTradeskill(nCurrentTradeskill)
	self:OnClose()
end

function TradeskillTrainer:OnSwapTradeskillBtn(wndHandler, wndControl) --SwapTradeskillBtn1 or SwapTradeskillBtn2, data is nTradeskillId
	if not wndHandler or not wndHandler:GetData() then
		return
	end

	local nCurrentTradeskill = self.wndMain:FindChild("LearnTradeskillBtn"):GetData()
	local tCurrTradeskillInfo = CraftingLib.GetTradeskillInfo(nCurrentTradeskill)
		if not tCurrTradeskillInfo.bIsHarvesting then
			Event_FireGenericEvent("TradeskillLearnedFromTHOR")
		else
	end

	CraftingLib.LearnTradeskill(nCurrentTradeskill, wndHandler:GetData())
	self:OnClose()
end

local TradeskillTrainerInst = TradeskillTrainer:new()
TradeskillTrainerInst:Init()
™™™ç å_Û± –æ„XpK    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™fE*   	fyM≠«!F=≠=∂)*FXsCœfø™∫(f%üˇ˝(F%üÍﬂ®F%üªﬂ(F%üø›(F%?™ü(f%üˇ›ÆfüØª()*F%Õ¡Ûß!F˙hZû	fÈqZTfE8   o+.# ˇ˜Uo+Y%@¿’4+Ωı˜‘QD+Xpb¢5¨"UUU¯o+k"ˇUˇ o+k"ˇUˇ o+k"ˇUˇ o+k"ˇUˇ o+k"ˇUˇ o+k"ˇUˇ ı4¨"UU’/QD+%	™ı4+~_ﬂO+9%$o+.# Óˇ_    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™    ™™™™  ”Ú± ÷ä,˚:Ôé»ﬂáŸx_ëóGüÒ}?∆«†yò±Ô˙?ˆ±ì˜Ìœ˛ƒø7FzèéGaMÊª»æS˛˛ﬁÃUæÔÒ±ˆo.Û◊ªY˛˛cqfﬁ_¥?o'ΩÈgo}fh0„˙Æ‚¯Yùèàª•üˇ-¿€?a∆ı¡ºsò±Ô˙ø,˝åÛ3Æﬂp·*éq>‹-˝º¿˜ΩZÃUæÔ’b∆ı.Ïãás§Ô˚èwK?„˛	3nòw3∆˝”‘œ‹Œ¸Á;≈ΩÈÁŒ¿†2 ˇdΩÿﬁﬁéG@lv|hõÄ÷å¸aáÔ/⁄ü_á~ˆ~Ø⁄®0>„peÙ˝«G‡ﬂ`ÈgÈo:9
Kú}òqg`zq8¸ª[˙˜Oòï3SÓﬁÌ}g∞Ù3ŒÖ%Œ>ÃÁ√›“œîﬂßRÙ3Æœ∞Â P>`ﬁ5"πÿö|˜Ù3Óü0„˙W∆˝”ù}˛|oËÁvU?K“o¸U˝<4xı≥F’œ_UıÛ†r˜Ô[?kT˝LÒ’ª¨ü/™˙ôeﬂzbò=™~T∆˝”‘œU˝|±™üá´˙yh±™üóU˝<¥X’œÉÃ™~R¸5Ëg¥˛Û-N±™üU˝|/≤™üá´˙ypY’œCãU˝<»¨ÍÁ!≈_É~~  H’œ˜´˙yH±™üá´˙ypY’œCãU˝<»¨ÍÁ!≈w^?ßîôáæ~NˆÍgi¥ÙWd-≥‚ı(Ü__ç>Áeù‡”œÿ]w[?ˇs˜˚ﬁ˙WˆÍÁÔ~o∞ÙÛıRD∆=òq˝ÜÔfŸ˚æ‘å»ª¨üó(˙—Wø· ]≥—◊ 'ñ~∆˘Ä◊oÿnñq>‹-˝|Ÿ´üWcÓ~KÆè§∞Øæ√ÖØˇJˆˆ„òˇ ÎÁ?›m˝ºD—èæ˙W∆˝”’œCx˝:ïoçø.˝¨Ú≠Ò◊•üUæ5V◊Z|ßÙ≥ ∑∆Í˙œCã’ıüõ˚≠üçÊ£uàËgÅf¯ïoÉa¯æE˝,–LóØÚ¿˘v‚·’œ –,*ﬂì—¶ø˙ô*·$äØ wäoM?ì„”Â©<pû5Î÷„ÅÙõ_*ﬂ.ı‹_˝LJ@L«WÂÅ3Æ˝Êzp(ÃVYeïUVYeïUVYÂ{Å—˙œÄZøÓˇŸ¶uÚï  ïGÚ± ä,XòiŒæ∆‡ˆ€è≤Tﬁ÷◊Dπ˚K⁄md)ÿ–BTÔ”{"NZûú€nf»ë¡«R»∂û‰#≥Rñd‚˝ë#¥Í$38ôM±Eò≥ˆk“„f[ÕÊÉjÒgÕéŸd:¢ØX4¿àèv⁄™≠”ÊjV%'T¬JöÂã∑ü≥K∏ÌMÈ}~◊¨kÏπVzôïºœŸ9{Œ…–NΩﬁÛÈ‹UÏ2”B÷ﬂ#I7]›Ÿ¬ﬂïCü˚%∫êá´‡ÆXL˙äg∂øìÓPoséñ|ˆö†ëóöπÈãàùêKáOfH9ÌÃ‚%CÒ'îq⁄	>>eÔ-ÌPÁÍiâ)uCº8˜"%∆µsª	ãsÕÃYORˆ»kc¸è:Çn”JÔvb¶ˇûÑM¸~s"–ÒÒv)˝ÓÙãIû◊÷√”@·£”{ï:7YíP∞"ãû‰+ÕmiûØŸ·∏∆l÷åçKﬁ5;◊ÿH¥û˘Ê´M*Çøl–Øÿ·]õ[ºTsßWf¨Áπ…⁄—Ù‹Äj»≠s¯ˇÛÛˇ˘˘Îrª7§mØ*öπ]Jﬂr©©fR≤€π/›4“$